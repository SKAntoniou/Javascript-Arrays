// ==========================================================================
// Buttons
// ==========================================================================

.btn {
  // Container
  border: none;
  border-radius: $border-radius-small;
  padding: 0.5rem;

  // Background
  background-color: var(--colour-background-tertiary);

  // Interaction
  cursor: pointer;
}

.btn-toggle {
  // default is inactive
  border: 1px solid var(--colour-background-tertiary);
  background-color: var(--colour-background-secondary);

  // Control active with JS, only one should be active at a time
  &.active {
    background-color: var(--colour-background-tertiary);
  }
}

.btn-refresh {
  // Colouring
  background-color: var(--colour-background-secondary);
  color: var(--colour-text-base);

  // Depth Effect
  box-shadow: var(--colour-button-box-shadow);
}
.btn-save {
  //Colouring
  background-color: var(--colour-button-save);

  // Depth Effect
  box-shadow: var(--colour-button-box-shadow);
}





// Ligh / Dark Mode Toggle in Header - Following the same SCSS formatting the theme was made in to prevent issues.
.switch-toggle.switch-candy,
.switch-light.switch-candy > span {
  background-color: var(--colour-background-base);
  height: $element-size-heading-height-buttons;
}
.switch-light.switch-candy span span,
.switch-light.switch-candy input:checked ~ span span:first-child,
.switch-toggle.switch-candy label {
  color: var(--colour-text-base);
  font-size: 1.5rem;
  font-weight: normal;
  text-shadow: 1px 1px 1px var(--colour-text-contrast);
}
.switch-light.switch-candy input ~ span span:first-child,
.switch-light.switch-candy input:checked ~ span span:nth-child(2),
.switch-candy input:checked + label {
  color: var(--colour-text-contrast);
}
.switch-candy a {
  border-color: var(--colour-text-contrast);
  background-color: var(--colour-background-accent);
}
.switch-toggle {
  input:focus ~ span a,
  input:focus + label {
    outline-width: 0px;
  }
}
// ==========================================================================
// Mixins
// ==========================================================================

// Colours & make dark
@mixin dark-colour($property, $palette, $catagory, $shade: base) {
  #{$property}: palette($palette, $catagory, $shade, base);
  &:hover, &:active {
    #{$property}: palette($palette, $catagory, $shade, dark);
  }
}

// Media queries
@mixin mq($break) {
  @if $break == 's' {
    @media (min-width: $break-small) {
      @content;
    }
  }
  @else if $break == 'm' {
    @media (min-width: $break-medium) {
      @content;
    }
  }
  @else if $break == 'l' {
    @media (min-width: $break-large) {
      @content;
    }
  }
  @else if $break == 'xl' {
    @media (min-width: $break-extra-large) {
      @content;
    }
  }
  @else {
    @error "Break-point #{$break} does not exist, check spelling and remember format is like: 's' or 'xl'.";
  }
}


// Light & Dark Mode colouring
@mixin ldmode-colours($mod) {
  @if ($mod == 'light' or $mod == 'dark') {
    $modmode: str-insert('mode', $mod, 0);

    :root {
      --colour-background-base:  #{palette($modmode,'background','base')};
      --colour-background-secondary: #{palette($modmode,'background','secondary')};
      --colour-background-tertiary: #{palette($modmode,'background','tertiary')};
      --colour-background-accent: #{palette($modmode,'background','accent')};
      --colour-text-base: #{palette($modmode,'text','base')};
      --colour-text-contrast: #{palette($modmode,'text','contrast')};
    }

  } @else {
    @error "Light & Dark mode function has been passed in incorrectly. The only allowed arguments are 'light' or 'dark'."
  }
}

@include ldmode-colours("light");